################################################################################
#
# ggz.cygclass - functions for building GGZ packages
#
# Part of cygport - Cygwin packaging application
# Copyright (C) 2008 Yaakov Selkowitz
# Provided by the Cygwin Ports project <http://cygwinports.dotsrc.org/>
#
# cygport is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cygport is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cygport.  If not, see <http://www.gnu.org/licenses/>.
#
# $Id: ggz.cygclass 4155 2008-08-07 04:58:41Z yselkowitz $
#
################################################################################

DESCRIPTION="GGZ Gaming Zone ${PN#ggz-} component"
HOMEPAGE="http://dev.ggzgamingzone.org/"
SRC_URI="http://ftp.ggzgamingzone.org/pub/ggz/${PV}/${P}.tar.gz "

GGZ_MODULES_DIR=/etc/ggz/modules

_ggz_bad_macros="gettext.m4 gtk-2.0.m4 iconv.m4 sdl.m4"

DIFF_EXCLUDES+=" config.rpath ${_ggz_bad_macros}"

ggz_autoreconf() {
	if [ ! -f configure.ac ]
	then
		error "ggz_autoreconf: cannot find configure.ac"
	fi

	for f in ${_ggz_bad_macros}
	do
		if [ -f m4/${f} ]
		then
			rm -f m4/${f}
		fi
	done

	cp -f /usr/share/gettext/config.rpath .

	cygautoreconf
}

ggz_compile() {
	cygconf \
		--disable-static \
		ac_cv_header_winsock_h=no \
		ac_cv_header_winsock2_h=no \
		"${@}"

	cygmake
}

ggz_postinst() {
	rm -f ${D}/etc/ggz.modules

	if defined GGZMODS
	then
		doggzmod ${GGZMODS}
	fi

	for g in $(ls ${D}${GGZ_MODULES_DIR}/* 2> /dev/null)
	do
		dodir /etc/postinstall /etc/preremove

		cat >> ${D}/etc/postinstall/${PN}.sh <<-_EOF
			ggz-config --force --install --modfile=${GGZ_MODULES_DIR}/${g##*/}
			_EOF

		cat >> ${D}/etc/preremove/${PN}.sh <<-_EOF
			ggz-config --remove --modfile=${GGZ_MODULES_DIR}/${g##*/}
			_EOF
	done
}

doggzmod() {
	local g
	local m

	for m in ${@}
	do
		if [ ! -e ${m} ]
		then
			error "doggzmod: ${m}: file not found"
		fi

		g=$(grep ^CommandLine ${m} | sed -e 's|CommandLine *= */.*/\([^ ]*\).*|\1|g')

		insinto ${GGZ_MODULES_DIR}
		newins ${m} ${g}.dsc
	done
}

src_compile() {
	cd ${S}
	ggz_autoreconf
	cd ${B}
	ggz_compile
}

src_install() {
	cd ${B}
	cyginstall
	ggz_postinst
}
