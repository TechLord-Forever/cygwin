cg-init(1)
==========

NAME
----
cg-init - initialize new repository

SYNOPSIS
--------
cg-init [-I] [-N] [-e EXCLUDEPATTERN]... [-m MESSAGE]...

DESCRIPTION
-----------
gitlink:cg-init[1] called in a non-empty directory will automatically add its contents
in the initial commit. (Please note that certain default ignore rules are
applied during this operation - see gitlink:cg-status[1] for detailed description.
If any files were not added due to this, cg-init will advise you what to do.)

This command is intended for creating repositories for work on new projects.
If you want to clone an existing project, see gitlink:cg-clone[1]. If you want to
set up a public repository not for direct work but only for pushing/pulling,
see gitlink:cg-admin-setuprepo[1]. It is also possible to import repositories from
other SCMs to GIT, see `git cvsimport(1)`, `git-svnimport(1)` and
`git archimport(1)`.

OPTIONS
-------

--
-e EXCLUDEPATTERN::
	Ignore files matching this pattern when importing files for the
	initial commit. Note that if you are importing any .gitignore
	files, they will be considered as well (see gitlink:cg-status[1] for
	details on the files ignoring concept). If you want to make
	an even more custom choice of files to be imported, use the -I
	parameter and add and perform the initial commit manually.

-I::
	Do not perform the initial commit. You can perform the initial commit
	manually later, but you will need to pass cg-commit the -C parameter.

-m MESSAGE::
	Specify the commit message for the initial commit. See gitlink:cg-commit[1]
	documentation for details.

-N::
	Only update the cache: do not copy the data into the object database.
	This is for special purposes when you might not actually _have_ any
	object database. This option is normally not interesting.


-h, --help::
	Print usage summary.

--long-help::
	Print user manual. The same as found in gitlink:cg-init[1].
--



COPYRIGHT
---------
Copyright (C) Petr Baudis, 2005

SEE ALSO
--------
cg-init is part of gitlink:cogito[7],
a toolkit for managing gitlink:git[7] trees.
