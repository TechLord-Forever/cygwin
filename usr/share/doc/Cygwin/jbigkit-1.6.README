jbigkit
------------------------------------------
JBIG is a highly effective lossless compression
algorithm for bi-level images (one bit per pixel), which
is particularly suitable for document pages.  This
package provides both a library and utility programs.

Runtime requirements (these or newer):
  cygwin-1.5.22-1

Build requirements (these or newer):
  cygwin-1.5.22-1
  gcc-3.4.4-1
  binutils-20060817-1

Canonical homepage:
  http://www.cl.cam.ac.uk/~mgk25/jbigkit/

Canonical download:
  http://www.cl.cam.ac.uk/~mgk25/download/jbigkit-1.6.tar.gz

License:
  GPL

Language:
  C

===========================================================

Build instructions:
  unpack jbigkit-1.6-X-src.tar.bz2
    if you use setup to install this src package, it will be
	 unpacked under /usr/src automatically
  cd /usr/src
  cygport ./jbigkit-1.6-X.cygport all

This will create:
  /usr/src/libjbig2-1.6-X.tar.bz2
  /usr/src/libjbig-devel-1.6-X.tar.bz2
  /usr/src/jbigkit-1.6-X.tar.bz2
  /usr/src/jbigkit-1.6-X-src.tar.bz2

'cygport ./jbigkit-1.6-X.cygport prep' will create a patched
source directory, and 'cygport ./jbigkit-1.6-X.cygport check'
will run the testsuite.

===========================================================

To link this library with your projects:
  #1) include jbig.h
  #2) to link with the static library, use '-static' on the link line
  #3) to link with the dll, no unusual link-time flags are needed
In either case, there are NO special compile time flags needed

===========================================================

Files included in the runtime package (libjbig2):

  /usr/bin/cygjbig-2.dll

Files included in the development package (libjbig-devel):
  see 'cygcheck -l libjbig-devel' output or browse the listing 
  for the appropriate version at http://cygwin.com/packages/.

Files included in the main package:
  see 'cygcheck -l jbigkit' output or browse the listing 
  for the appropriate version at http://cygwin.com/packages/.

===========================================================

Port Notes:
----------  jbigkit-1.6-1 -- 15 Nov 2006 -----------
* Use cygport build framework
* Bump DLL number because API changed:
    "minor API modification in jbg_enc_options(): parameter l0 changed
     from type long to unsigned long; previous value now remains
     unchanged when l0 == 0 (was: l0 < 0)"
* Split into multiple packages: DLL, -devel, and main

1.5-3
-----------------------------
This is the cygwin-1.5.2 FLAG DAY release.

1.5-2
-----------------------------
This is the cygwin-1.5.1 FLAG DAY release.
Documentation moved to /usr/share/*

1.5-1
-----------------------------
This is the cygwin-1.5.0 FLAG DAY release.
Also, update to latest source.

1.4-1
-----------------------------
Update to latest source release.

1.2-6:
-----------------------------
Use autoimport magic; no longer need -DJBIG_STATIC or -DALL_STATIC
No longer use __declspec(???port) markers.  Let binutils' auto-import
magic handle it.  DLL seems to be fully backward compatible with 
1.2-4 (exe's compiled against 1.2-4 dll work with new dll; new exe's
compiled against 1.2-6 work with the old dll).

1.2-5: (unreleased)
-----------------------------
Reorganized the package to support script-based building.

1.2-4:
-----------------------------
Added support for -DALL_STATIC synonym to -DJBIG_STATIC

As of 1.2-3, the dll is named "cygjbig1.dll" NOT "libjbig.dll".  This 
  helps to avoid dll naming conflicts between cygwin dll's and 
  dlls from other platforms (native, pw, etc).  If you have an
  executable that depends on "libjbig.dll" you may either recompile 
  your app so that it links with libjbig.dll.a/cygjbig1.dll, or install
  *just* the dll from jbigkit-1.2-2.tar.gz into your /usr/bin 
  directory.

The dll is VERSIONED. (i.e. "cygjbig1.dll" NOT "cygjbig.dll") because
  the jbig package seems fairly immature, and its API is likely to
  change IMO.  To enable any hypothetically upcoming versions
  and this one to coexist, the dll's are versioned.
  (Versioning is not necessary for static libs until AFTER the
  release of an incompatible library, but you've got to think ahead
  for the dynamic libs). 

Cygwin port maintained by: Charles Wilson cwilson@ece.gatech.edu

